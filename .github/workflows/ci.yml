name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup

      - name: Install ClangFormat
        shell: bash
        run: brew install clang-format

      - name: Install Ktlint
        shell: bash
        run: brew install ktlint

      - name: Check
        run: yarn t

#      - name: Cache Gradle
#        uses: actions/cache@v4
#        with:
#          path: |
#            ~/.gradle/wrapper
#            ~/.gradle/caches
#          key: ${{ runner.os }}-gradle-${{ hashFiles('example/android/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('yarn.lock') }}-${{ hashFiles('**/package.json', '!node_modules/**') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-${{ hashFiles('yarn.lock') }}-${{ hashFiles('**/package.json', '!node_modules/**') }}-

#  test:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Setup
#        uses: ./.github/actions/setup
#
#      - name: Run unit tests
#        run: yarn test --maxWorkers=2 --coverage
#
#  build-library:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Setup
#        uses: ./.github/actions/setup
#
#      - name: Build package
#        run: yarn prepare

  build-android:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [ old, new ]
    env:
      TURBO_CACHE_DIR: .turbo/android-${{matrix.arch}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Convert Arch
        run: yarn ${{matrix.arch}}

      - name: Cache turborepo for Android
        uses: actions/cache@v4
        with:
          path: ${{ env.TURBO_CACHE_DIR }}
          key: ${{ runner.os }}-turborepo-android-${{ hashFiles('yarn.lock') }}-${{matrix.arch}}
          restore-keys: |
            ${{ runner.os }}-turborepo-android-${{matrix.arch}}-

      - name: Check turborepo cache for Android
        run: |
          TURBO_CACHE_STATUS=$(node -p "($(yarn turbo run ci:android:build:${{matrix.arch}} --single-package --cache-dir="${{ env.TURBO_CACHE_DIR }}" --dry=json)).tasks.find(t => t.task === 'ci:android:build:${{matrix.arch}}').cache.status")

          if [[ $TURBO_CACHE_STATUS == "HIT" ]]; then
            echo "turbo_cache_hit=1" >> $GITHUB_ENV
          fi

      - name: Install JDK
        if: env.turbo_cache_hit != 1
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Finalize Android SDK
        if: env.turbo_cache_hit != 1
        run: |
          /bin/bash -c "yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses > /dev/null"

      - name: Cache Gradle
        if: env.turbo_cache_hit != 1
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/wrapper
            ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('example/android/gradle/wrapper/gradle-wrapper.properties') }}-${{matrix.arch}}-${{ hashFiles('yarn.lock') }}-${{ hashFiles('**/package.json', '!node_modules/**') }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{matrix.arch}}-${{ hashFiles('yarn.lock') }}-${{ hashFiles('**/package.json', '!node_modules/**') }}-

      - name: Build example for Android
        env:
          JAVA_OPTS: "-XX:MaxHeapSize=6g"
        run: |
          yarn turbo run ci:android:build:${{matrix.arch}} --cache-dir="${{ env.TURBO_CACHE_DIR }}" --single-package

  build-ios:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [ new ]
    env:
      TURBO_CACHE_DIR: .turbo/ios-${{matrix.arch}}
    steps:
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Convert Arch
        run: yarn ${{matrix.arch}}

      - name: Cache turborepo for iOS
        uses: actions/cache@v4
        with:
          path: ${{ env.TURBO_CACHE_DIR }}
          key: ${{ runner.os }}-turborepo-ios-${{ hashFiles('yarn.lock') }}-${{matrix.arch}}
          restore-keys: |
            ${{ runner.os }}-turborepo-ios-${{matrix.arch}}-

      - name: Check turborepo cache for iOS
        run: |
          TURBO_CACHE_STATUS=$(node -p "($(yarn turbo run ci:ios:build:${{matrix.arch}} --single-package --cache-dir="${{ env.TURBO_CACHE_DIR }}" --dry=json)).tasks.find(t => t.task === 'ci:ios:build:${{matrix.arch}}').cache.status")

          if [[ $TURBO_CACHE_STATUS == "HIT" ]]; then
            echo "turbo_cache_hit=1" >> $GITHUB_ENV
          fi

      - name: Cache cocoapods
        if: env.turbo_cache_hit != 1
        id: cocoapods-cache
        uses: actions/cache@v4
        with:
          path: |
            **/ios/Pods
          key: ${{ runner.os }}-cocoapods-${{ hashFiles('example/ios/Podfile.lock') }}-${{matrix.arch}}
          restore-keys: |
            ${{ runner.os }}-cocoapods-${{matrix.arch}}-

      - name: Install cocoapods
#        if: env.turbo_cache_hit != 1 && steps.cocoapods-cache.outputs.cache-hit != 'true'
        run: yarn pod:${{matrix.arch}}
        env:
          NO_FLIPPER: 1

      - name: Build example for iOS
        run: |
          yarn turbo run ci:ios:build:${{matrix.arch}} --cache-dir="${{ env.TURBO_CACHE_DIR }}" --single-package
